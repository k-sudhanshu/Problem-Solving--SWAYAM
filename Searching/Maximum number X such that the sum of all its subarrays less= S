/******************************************************************************
You have given an array A having N elements and an integer S. You have to find a maximum number X such that the sum of all its subarrays of size X is less than or equal to S.
Example Input:  
    A = [1, 3, 4, 2]  
    S = 7  
Example Output:  
    2  
Explanation:  
    All subarrays of size 2 have the sum less than 7.  
    Subarays are :  
    1. [1, 3]  
    2. [3, 4]  
    3. [4, 2]  

*******************************************************************************/

#include <bits/stdc++.h>
using namespace std;
bool box(int mid,int s,vector<int>&v){
    int n=v.size();
    //we cheack all subarray of size mid sum less ten equal to s
    int sum=0;
    for(int i=0;i<mid;i++){
        sum+=v[i];
    }
     if(sum>s)return false;
    int k=0;
    for(int i=mid;i<=n-mid+1;i++){
        sum+=v[i];
        sum-=v[i-mid];
        if(sum>s)return false;
    }
    return true;
}

int main()
{
  int n;
  cin>>n;
  int Sum;
  cin>>Sum;
  vector<int>v(n);
  for(int i=0;i<n;i++){
      cin>>v[i];
  }
  //ans lies between array of size 1 to n;
  int s=1;
  int e=n;
  while(s<=e){
      int mid=(s+e)/2;
      if(box(mid,Sum,v)){
          s=mid+1;
      }
      else{
          e=mid-1;
      }
  }
  cout<<e;

    return 0;
}
